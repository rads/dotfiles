# eval "$(rbenv init -)"
export PATH="/Users/rads/bin:./node_modules/.bin:/Users/rads/go/bin:/usr/local/bin:/usr/local/share/python:/usr/local/share/npm/bin:$PATH"
export PKG_CONFIG_PATH="/opt/local/lib/pkgconfig:$PKG_CONFIG_PATH"
export GOPATH="/Users/rads/go"

alias cheat="nocorrect cheat"
alias lein="nocorrect lein"
alias vim="/usr/local/Cellar/macvim/7.3-66/MacVim.app/Contents/MacOS/Vim"
alias pg-start="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"
alias pg-stop="pg_ctl -D /usr/local/var/postgres stop -s -m fast"
alias dns="ruby ~/Dropbox/Library/Scripts/Toggle\\ DNS.rb"
alias redis-start="redis-server /usr/local/etc/redis.conf"
alias emacs="~/Applications/Emacs.app/Contents/MacOS/Emacs"
alias e="/usr/local/Cellar/emacs/24.2/bin/emacsclient -t"
alias ec="/usr/local/Cellar/emacs/24.2/bin/emacsclient -c"
alias ss=". ~/scribd/scribox/set_environment.sh"
alias sack="ack --ignore-dir aggregated --ignore-dir tmp --ignore-dir vendor"
export ACKRC=".ackrc"

function text-me() {
  echo $1 | twilio-sms -c ~/.twilio.conf 702-408-6183
}
source ~/scribd/rad/commands.sh
source ~/scribd/rails/rad/commands.sh
function qaptxt() {
 qap $* && text-me "QA$1 finished deploy"
}

export VIM_REMOTE="VIM"
function v() {
  if [[ ARGC -eq 1 ]] then
    mvim --servername $VIM_REMOTE --remote $1
  else
    mvim --servername $1 --remote $2
  fi
}

. ~/lib/ondir-0.2.2/scripts.sh

function ta() { tmux attach -t $1 }
function tn() { tmux new -s $1 }
alias tls="tmux ls"
alias tc="tmux show-buffer | pbcopy"

export EDITOR="vim -f"
export CLOJURESCRIPT_HOME=/Users/rads/lib/clojurescript

alias g="hub"
alias gci="g commit"
alias grb="g rebase"
alias gca="g commit --amend"
alias gcm="g commit -m"
alias gs="g status"
alias gup="~/bin/gup"

function git_current_branch() {
  git symbolic-ref HEAD 2> /dev/null | sed -e 's/refs\/heads\///'
}

alias gpthis='git push origin HEAD:$(git_current_branch)'
alias gm='git merge'
alias spec='bundle exec spec'

. `brew --prefix`/etc/profile.d/z.sh

[[ -s $HOME/.pythonbrew/etc/bashrc ]] && source $HOME/.pythonbrew/etc/bashrc ]]
[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator ]]

export SCRIBD_USER=rad
